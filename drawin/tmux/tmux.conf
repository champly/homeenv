set -g prefix M-`

# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
set-option -a terminal-overrides ",*256col*:RGB"
# set -as terminal-overrides ",xterm*:Tc:sitm=\E[3m"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

# 让 tmux 使用 zsh 的环境变量
set-option -g default-shell /bin/zsh
set-option -g default-command "exec /bin/zsh"

set -g base-index 1
set -g pane-base-index 1
set -g history-limit 10000
set -g mode-keys vi
set -q -g utf8 on
set -q -g status-utf8 on
set-option -g allow-rename off
set -g renumber-windows on

# activity
set -g monitor-activity on
set -g visual-activity off

# display
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

# create session
bind C-c new-session
# find session
bind C-f command-prompt -p find-session "switch-client -t %%"
# split current window horizontally
bind - split-window -v -c "#{pane_current_path}"
# split current window vertically
bind _ split-window -h -c "#{pane_current_path}"

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
# edit configuration
# bind e new-window -n "~/.tmux.conf.local" "EDITOR=\${EDITOR//mvim/nvim} && EDITOR=\${EDITOR//gvim/nvim} && \${EDITOR:-nvim} ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""
bind e new-window -n "~/.tmux.conf" "EDITOR=\${EDITOR//mvim/vim} && EDITOR=\${EDITOR//gvim/vim} && \${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""

#开关鼠标移动
bind-key m run 'old=$(tmux show -gv mouse);new=""; if [ "$old" = "on" ]; then new="off"; else new="on"; fi; tmux set -g mouse $new; tmux display "mouse: $new"'
# bind-key S run 'old=$(tmux show -gv synchronize-panes);new=""; if [ "$old" = "on" ]; then new="off"; else new="on"; fi; tmux set -g synchronize-panes $new; tmux display "synchronize-panes: $new"'
bind C-h run 'old=$(tmux show -gv status); new=""; if [ "$old" = "on" ]; then new="off"; else new="on"; fi; tmux set -g status $new;'

#tmux 插件列表
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin "tmux-plugins/tmux-copycat"
set -g @plugin "egel/tmux-gruvbox"
# set -g @plugin "tmux-plugins/tmux-cpu"

set -g @continuum-save-interval "5"
set -g @continuum-restore "on"
set -g @tmux-gruvbox "light" # dark or light
# set -g status-interval 5
# set -g status-right 'WEATHER: #{weather} | #{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | %Y-%m-%d %H:%M:%S '
# set -g status-right '#{weather}'

# to define a custom #{foo} variable, define a POSIX shell function between the
# '# EOF' and the '# "$@"' lines. Please note that the opening brace { character
# must be on the same line as the function name otherwise the parse won't detect
# it.
#
# then, use #{foo} in e.g. the 'tmux_conf_theme_status_left' or the
# 'tmux_conf_theme_status_right' variables.

# # /!\ do not remove the following line
# EOF
#
# # /!\ do not "uncomment" the functions: the leading "# " characters are needed
#
# weather() {
#   curl -m 1 wttr.in?format=3 2>/dev/null
#   sleep 900 # sleep for 15 minutes, throttle network requests whatever the value of status-interval
# }
#
# "$@"
# # /!\ do not remove the previous line

#将这一行插入.tmux.conf最底部
run '~/.tmux/plugins/tpm/tpm'
